@font-face {
	font-family: scp;
	src: url(../fonts/SourceCodePro-Regular.ttf);
}
:root {
	--border: 2px solid #525252;
	--bg: #171717;
	--hover-color: #1d4ed8;
	--bg-main: #262626;
}
* {
	scroll-behavior: smooth;
	user-select: none;
	margin: 0;
	padding: 0;
	font-family: scp;
	font-size: 16px;
	color: white;
/*	outline: 1px solid blue;*/
}
body {
	background-color: var(--bg-main);
}
::-webkit-scrollbar {
	background-color: var(--bg-main);
	width: 10px;
}
::-webkit-scrollbar-thumb {
	background-color: var(--bg);
	border: var(--border);
}
::-webkit-scrollbar-thumb:hover {
	border: 2px solid var(--hover-color);
}
header {
	background-color: var(--bg);
	border-bottom: var(--border);
	display: flex;
	align-items: center;
	justify-content: center;
	position: sticky;
	top: 0;
	z-index: 1;
}
.icon {
	width: 45px;
	height: 45px;
	margin: 5px 5px 10px 5px;
}
.logo {
	content: url(../media/icon/logo.png);
}
.slime {
	content: url(../media/icon/slime.png);
	transform: rotateY(180deg);
	cursor: none;
}
.slime:hover {
	animation: slime 1s infinite;
}
@keyframes slime {
	0% {
		transform: translateY(0px) rotateY(180deg);
	}
	25% {
		transform: translateY(-5px) rotateY(180deg);
	}
	50% {
		transform: translateY(0px) rotateY(180deg);
	}
	75% {
		transform: translateY(-5px) rotateY(180deg);
	}
	100% {
		transform: translateY(0px) rotateY(180deg);
	}
}
.title {
	margin: 10px 0;
	font-size: 1.875rem;
}





.searchBox {
	width: auto;
	margin: 0 3rem;
}
.searchBox::before {
	content: 'Search & Filter:';
	display: block;
}
.searchSplit {
	border-left: 10px solid aqua;
	padding-left: 10px;
/*	gap: .5rem;*/
}
.searchBar {
	border-bottom: var(--border);
	display: flex;
	align-items: center;
}
.searchBar:hover {
	border-bottom-color: var(--hover-color);
}
.searchIcon {
	content: url(../media/icon/search_icon.png);
	width: 16px;
	height: 16px;
	filter: brightness(100);
	margin: 5px;
	cursor: pointer;
}
.searchIcon:hover {
	filter: brightness(1);
}
.searchInput {
	background-color: transparent;
	border: none;
	outline: none;
	width: 100%;
	font-size: 1rem;
}
.searchRadio ~ .searchText {
	margin: 0;
	display: inline-block;
}
.button {
	background-color: #4184ff;
	border: var(--border);
	border-color: transparent;
	border-radius: 1rem;
	width: fit-content;
	margin: 1rem auto;
	padding: .5rem;
	display: block;
	text-decoration: none;
	transition: .3s;
}
.button:hover {
	background-color: #1b69f8;
}





.slider {
	background: rgba(38, 38, 38, .80);
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
	position: fixed;
	z-index: 1;
	bottom: 0;
	gap: 5px;
}
.left,
.right {
	width: 3rem;
	height: 3rem;
	cursor: pointer;
	filter: brightness(100);
}
.left:hover,
.right:hover {
	filter: brightness(1);
}
.left {
	content: url(../media/icon/left.png);
}
.left:hover {
	animation: left 1s infinite;
}
@keyframes left {
	0% {
		transform: translateX(0px);
	}
	50% {
		transform: translateX(-5px);
	}
	100% {
		transform: translateX(0px);
	}
}
.right {
	content: url(../media/icon/right.png);
}
.right:hover {
	animation: right 1s infinite;
}
@keyframes right {
	0% {
		transform: translateX(0px);
	}
	50% {
		transform: translateX(5px);
	}
	100% {
		transform: translateX(0px);
	}
}
.turnOff,
.turnOff:hover {
	filter: grayscale(100%);
	animation: none;
}
.numberInput {
	background-color: black;
	width: 2rem;
	border: var(--border);
	outline: none;
	font-size: 1rem;
}





.gallery {
	margin: 10px 0 50px 0;
	display: grid;
	grid-gap: 5px;
	grid-template-columns: repeat(auto-fit, minmax(13rem, 13rem));
	justify-content: center;
}
section,
.cContainer {
	position: relative;
	overflow: hidden;
}
section,
.min {
	width: 13rem;
	height: 18rem;
}
section {
}
.anime {
	cursor: pointer;
}
.anime:hover .min,
.cContainer:hover .character {
	transform: scale(1.1);
}
img {
	vertical-align: bottom;
	-webkit-user-drag: none;
}
.min,
.character {
	transition: transform .5s ease;
}
.name,
.cName {
	background-color: rgba(0, 0, 0, .8);
	opacity: 0;
	padding: 5px;
	position: absolute;
	bottom: 0;
	transition: .3s;
	cursor: pointer;
}
.anime:hover .name,
.cContainer:hover .cName {
	opacity: 1;
}





.moreInfo {
	height: 100%;
	display: flex;
	justify-content: center;
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	z-index: 2;
}
.hideInfo {
	display: none;
}
.clickHide {
	background: rgba(38, 38, 38, .80);
	width: 100%;
	height: 100%;
	position: fixed;
	z-index: 1;
}
.stopScroll {
	overflow: hidden;
}
.split {
	border: var(--border);
	background-color: var(--bg-main);
	width: fit-content;
	height: fit-content;
	display: flex;
	margin: auto;
	z-index: 2;
}
.max {
	width: 21rem;
	height: 30rem;
	border-right: var(--border);
}
.limited {
	width: 750px;
	height: 30rem;
	overflow-y: scroll;
}
h1,
h2,
h3,
p,
.tagBox,
.characterBox,
.relatedBox {
	width: fit-content;
	margin: 1rem 1rem 0 1rem;
	font-size: 2.5rem;
	word-break: break-word;
	cursor: pointer;
}
h1 {
	border-bottom: var(--border);
}
h2, h3 {
	font-size: 1.5rem;
	font-weight: normal;
}
h2::before,
h2::after,
h3::before,
h3::after {
	cursor: default;
}
h2::before {
	content: '『';
}
h2::after {
	content: '』';
}
h3::before {
	content: '（';
}
h3::after {
	content: '）';
}
.split2 {
	display: flex;
}
.studios {
	margin: 1rem 1rem 0 1rem;
}
.sImg {
	width: 10rem;
	height: 10rem;
	display: block;
}
.smallInfo {
	margin: auto 0;
}
.searchBox::before,
.studios::before,
.type::before,
.season::before,
.aired::before,
.rating::before,
.synopsis::before,
.tagBox::before,
.characterBox::before,
.relatedBox::before {
	font-size: 1.3rem;
	font-weight: bolder;
	color: aqua;
}
.studios::before {
	content: 'Studios: ';
}
.type::before {
	content: 'Type: ';
}
.season::before {
	content: 'Season: ';
}
.aired::before {
	content: 'Aired: ';
}
.rating::before {
	content: 'Rating: ';
}
p {
	font-size: 1rem;
	word-break: break-word;
	cursor: default;
}
.synopsis::before,
.tagBox::before,
.characterBox::before,
.cRoleM::after,
.cRoleS::after,
.relatedBox::before {
	display: block;
	width: 100%;
}
.synopsis::before {
	content: 'Synopsis:';
}
.tagBox,
.characterBox,
.relatedBox {
	display: flex;
	flex-wrap: wrap;
	cursor: default;
	font-size: 1rem;
	gap: .5rem;
}
.tagBox::before {
	content: 'Tags:';
}
.tag {
	width: fit-content;
	height: fit-content;
	border: var(--border);
	border-radius: 1.5rem;
	padding: 10px;
	position: relative;
}
.characterBox::before {
	content: 'Characters:';
}
.cContainer {
	position: relative;
}
.cContainer,
.character {
	width: 110px;
	height: 160px;
}
.cName {
	font-size: .8rem;
}
.cRoleM::after {
	content: '[ Main ]';
	text-align: center;
}
.cRoleS::after {
	content: '[ Support ]';
	text-align: center;
}
.relatedBox {
	margin-bottom: 1rem;
}
.relatedBox::before {
	content: 'Related:';
}
.rImg {
	width: 5rem;
	height: 5rem;
}
.rAnimeVietsub {
	content: url(../media/icon/animeVietsub.png);
}
.rAnimeNana {
	content: url(../media/icon/animeNana.png);
}
.rMangaQQ {
	content: url(../media/icon/mangaQQ.png);
}
.rMangaDex {
	content: url(../media/icon/mangaDex.png);
}
.rMangaNetTruyen {
	content: url(../media/icon/mangaNetTruyen.png);
}
.rMangaNelo {
	content: url(../media/icon/mangaNelo.png);
}
.rMAL {
	content: url(../media/icon/mal.png);
}
/*.textLink {
	width: fit-content;
}
.textLink:link,
.textLink:visited {
	color: #3b82f6;
	text-decoration: none;
}
.textLink:hover {
	color: var(--hover-color);
	text-decoration: underline;
}
.textLink:active {
	color: yellow;
	text-decoration: underline;
}*/
.toast {
	background-color: #3a3b3c;
	border: var(--border);
	border-radius: 10px;
	width: 200px;
	padding: 5px;
	position: fixed;
	bottom: 3%;
	right: 1%;
	transform: translateX(300px);
	transition: 1s;
	z-index: 3;
}
#toastCopy {
	overflow-x: auto;
}
#toastClose {
	content: url(../media/icon/icon_close.png);
	filter: brightness(100);
	width: 12px;
	height: 12px;
	position: absolute;
	top: 6px;
	right: 6px;
}
#toastClose:hover {
	filter: brightness(1);
}